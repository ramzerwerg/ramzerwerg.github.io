{"version":3,"file":"static/js/743.4e888949.chunk.js","mappings":"0MAWMA,IANKC,EAAAA,EAAAA,IAAG,gFAMMC,EAAAA,GAAAA,QAAc,8PAgB5BC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAc,2FAMtBG,EAAiBH,EAAAA,GAAAA,IAAU,gLAU3BI,EAAOJ,EAAAA,GAAAA,IAAU,maAYnB,oBAAGK,OAAc,YAAR,OAAQ,GACX,6BAIP,IAmBGC,EAAWN,EAAAA,GAAAA,IAAU,wDAKrBO,EAAQP,EAAAA,GAAAA,IAAU,iLAQpB,oBAAGK,OAAc,YAAR,OAAQ,GACX,2GAKL,IAGCG,EAASR,EAAAA,GAAAA,IAAU,sNA4EzB,UA7DmB,SAAH,GAAc,EAARS,SAA8B,IAApBC,EAAY,EAAZA,aAC9B,GAAoCC,EAAAA,EAAAA,UAAS,GAAE,eAAxCC,EAAU,KAAEC,EAAa,KAG5BC,EAAQC,YAAW,WACjBH,EAAaF,EAAaM,OAAS,EACrCH,EAAcD,EAAa,GAE3BC,EAAc,EAElB,GAAG,KAcH,OAZAI,EAAAA,EAAAA,YAAU,WACRC,aAAaJ,GAEbA,EAAQC,YAAW,WACbH,EAAaF,EAAaM,OAAS,EACrCH,EAAcD,EAAa,GAE3BC,EAAc,EAElB,GAAG,IACL,GAAG,CAACD,KAGF,SAACd,EAAW,WACV,UAAC,KAAS,YACR,UAACG,EAAK,WAAC,iEACM,kBAAM,uIAGnB,UAAC,KAAI,CAACkB,SAAS,KAAKC,KAAK,KAAI,UAAC,uJACI,kBAAM,8KAAgC,KACtE,kBAAM,2MAIR,UAACjB,EAAc,WACZO,EAAaW,KAAI,SAACC,EAAYC,GAAK,OAClC,UAACnB,EAAI,CAAaC,OAAQkB,GAASX,EAAW,WAC5C,SAACJ,EAAM,WACL,SAAC,EAAAgB,cAAa,CAACC,IAAKH,EAAWI,IAAKC,IAAI,aAAaC,QAAQ,YAE/D,SAAC,KAAM,UAAEN,EAAWO,SACpB,SAAC,KAAI,CAACV,SAAS,KAAKC,KAAK,KAAI,SAC1BE,EAAWQ,SANLP,EAQJ,KAGT,SAACjB,EAAQ,UACNI,EAAaW,KAAI,SAACU,EAAMR,GAAK,OAC5B,SAAChB,EAAK,CAACyB,QAAS,kBAAKnB,EAAcU,EAAM,EAAclB,OAAQkB,GAASX,GAAxBW,EAA4C,aAO1G,C,oNC3KaU,G,QAASjC,EAAAA,GAAAA,GAAS,6HAEd,oBAAGkC,OAAY,YAAN,MAAG,IAAG,CAAa,IAElC,oBAAGC,MAAe,YAAV,MAAG,QAAO,CAAY,KAG5BjC,EAASF,EAAAA,GAAAA,GAAS,iJAKpB,oBAAGmC,MAAe,YAAV,MAAG,QAAO,CAAY,IAG5BC,EAASpC,EAAAA,GAAAA,GAAS,qJACd,oBAAGkC,OAAY,YAAN,MAAG,IAAG,CAAa,IAIlC,oBAAGC,MAAe,YAAV,MAAG,QAAO,CAAY,IAGnCE,GAAetC,EAAAA,EAAAA,IAAG,sGACT,oBAAGoB,SAAAA,OAAQ,MAAG,GAAE,MAAEC,KAAAA,OAAI,MAAG,GAAE,SACtCD,EAAWA,EAAW,KAAI,gBAAYC,EAAO,GAAK,GAAKA,EAAO,EAAI,GAAE,mBAAWA,EAAI,MAAK,IAC3E,oBAAGc,OAAY,YAAN,MAAG,IAAG,CAAa,IAC5B,oBAAGd,KAAAA,OAAI,MAAG,GAAE,SAAOkB,WAAWlB,GAAQkB,WAAWlB,GAAQ,CAAC,IAChE,oBAAGe,MAAe,YAAV,MAAG,QAAO,CAAY,IAG5BI,EAAOvC,EAAAA,GAAAA,EAAQ,8BACxBqC,GAGSG,EAAIxC,EAAAA,GAAAA,EAAQ,wEACrBqC,GAOSI,EAAYzC,EAAAA,GAAAA,IAAU,uG","sources":["Components/Technology/technologyMobile.jsx","assets/styles/component.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { InnerWrap, Text, Title2, Title3 } from \"../../assets/styles/component\";\r\n\r\nconst bg = css`\r\n  content: \"\";;\r\n  z-index: -1;\r\n  position: absolute;\r\n`;\r\n\r\nconst STechnology = styled.section`\r\n  padding: 100px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  & > div {\r\n    & > p {\r\n      text-align: center;\r\n      margin-bottom: 70px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled(Title2)`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-size: 26px;\r\n`;\r\n\r\nconst TechnologyList = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 80px 33px;\r\n  height: 370px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst Tech = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 220px;\r\n  min-width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  opacity: 0;\r\n  transition: 1s ease-in-out;\r\n\r\n  ${({ active = false }) =>\r\n    active &&\r\n    `\r\n    opacity: 1;\r\n    \r\n  `}\r\n\r\n  h3 {\r\n    font-size: 18px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 15px;\r\n    text-align: center;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  &:last-child {\r\n    img {\r\n      transform: translateY(-15%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst PointBox = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n`;\r\n\r\nconst Point = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 12px;\r\n  transition: 0.5s ease-in-out;\r\n  background-color: #5a3be4;\r\n  transform: scale(1);\r\n\r\n  ${({ active = false }) =>\r\n    active &&\r\n    `\r\n      transform: scale(1.1);\r\n      background: #5A3BE4;\r\n      box-shadow: 0px 0px 11px #8B73F7;\r\n    `}\r\n`;\r\n\r\nconst ImgBox = styled.div`\r\n  height: 180px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin-bottom: 0px;\r\n\r\n  img {\r\n    max-width: 110%;\r\n    max-height: 120%;\r\n  }\r\n`;\r\n\r\nconst Technology = ({ language, technologies }) => {\r\n  const [activeTech, setActiveTech] = useState(0);\r\n\r\n\r\n  let Slide = setTimeout(() => {\r\n    if (activeTech < technologies.length - 1) {\r\n      setActiveTech(activeTech + 1);\r\n    } else {\r\n      setActiveTech(0);\r\n    }\r\n  }, 3000);\r\n\r\n  useEffect(() => {\r\n    clearTimeout(Slide);\r\n\r\n    Slide = setTimeout(() => {\r\n      if (activeTech < technologies.length - 1) {\r\n        setActiveTech(activeTech + 1);\r\n      } else {\r\n        setActiveTech(0);\r\n      }\r\n    }, 3000);\r\n  }, [activeTech]);\r\n\r\n  return (\r\n    <STechnology>\r\n      <InnerWrap>\r\n        <Title>\r\n          Технологии <br /> дополненной реальности\r\n        </Title>\r\n\r\n        <Text fix_size=\"12\" size=\"12\">\r\n          Объединенные технологии AR и AI <br /> позволяют создавать уникальный{\" \"}\r\n          <br />\r\n          контент прямо на трансляции стримера\r\n        </Text>\r\n\r\n        <TechnologyList>\r\n          {technologies.map((technology, index) => (\r\n            <Tech key={index} active={index == activeTech}>\r\n              <ImgBox>\r\n                <LazyLoadImage src={technology.img} alt=\"technology\" loading=\"lazy\" />\r\n              </ImgBox>\r\n              <Title3>{technology.title}</Title3>\r\n              <Text fix_size=\"10\" size=\"10\">\r\n                {technology.text}\r\n              </Text>\r\n            </Tech>\r\n          ))}\r\n\r\n          <PointBox>\r\n            {technologies.map((tech, index) => (\r\n              <Point onClick={()=> setActiveTech(index)} key={index} active={index == activeTech}></Point>\r\n            ))}\r\n          </PointBox>\r\n        </TechnologyList>\r\n      </InnerWrap>\r\n    </STechnology>\r\n  );\r\n};\r\n\r\nexport default Technology;\r\n","import styled from \"styled-components\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { css } from \"styled-components\";\r\n\r\nexport const Title1 = styled.h1`\r\n  font-size: clamp(2.5rem, 5vw, 5.25rem);\r\n  font-weight: ${({ weight = 400 }) => weight};\r\n  line-height: 145%;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title2 = styled.h2`\r\n  font-weight: 400;\r\n  text-align: center;\r\n  font-size: clamp(2.5rem, 4vw, 4rem);\r\n  line-height: 120%;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title3 = styled.h3`\r\n  font-weight: ${({ weight = 400 }) => weight};\r\n  font-size: clamp(1.1rem, 3vw, 1.625rem);\r\n  text-align: center;\r\n  line-height: 140%;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nconst textStandart = css`\r\n  font-size: ${({ fix_size = 18, size = 18 }) =>\r\n    fix_size ? fix_size + \"px\" : `clamp(${size - 5 >= 14 ? size - 5 : 14}px, 1vw,${size}px)`};\r\n  font-weight: ${({ weight = 400 }) => weight};\r\n  line-height: ${({ size = 18 }) => parseFloat(size) + parseFloat(size) / 2}px;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  ${textStandart}\r\n`;\r\n\r\nexport const A = styled.a`\r\n  ${textStandart}\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const InnerWrap = styled.div`\r\n  position: relative;\r\n  max-width: 1600px;\r\n  width: 90vw;\r\n  margin: 0 auto;\r\n`;\r\n"],"names":["STechnology","css","styled","Title","Title2","TechnologyList","Tech","active","PointBox","Point","ImgBox","language","technologies","useState","activeTech","setActiveTech","Slide","setTimeout","length","useEffect","clearTimeout","fix_size","size","map","technology","index","LazyLoadImage","src","img","alt","loading","title","text","tech","onClick","Title1","weight","color","Title3","textStandart","parseFloat","Text","A","InnerWrap"],"sourceRoot":""}