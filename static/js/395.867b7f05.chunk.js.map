{"version":3,"file":"static/js/395.867b7f05.chunk.js","mappings":"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","sources":["assets/images/arrow-up-right.svg","Components/Intro/tag.jsx","Components/Tasks/taskDesktop.jsx","Components/Tasks/tasksDesktop.jsx","assets/styles/component.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowUpRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 6 6 18M8 6h10v10\",\n    stroke: \"#fff\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowUpRight);\nexport default __webpack_public_path__ + \"static/media/arrow-up-right.d5c5cd4979afd79fc0793bd1f2b44c97.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\n\r\nconst TagStyled = styled.div`\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n\r\n  font-weight: 300;\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  color: #ffffff;\r\n\r\n  width: fit-content;\r\n  height: 46px;\r\n  padding: 12px 13px;\r\n\r\n  background: rgba(255, 255, 255, 0.05);\r\n  outline: 1px solid rgba(255, 255, 255, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 16px;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.15);\r\n    outline: 2px solid rgba(255, 255, 255, 0.2);\r\n  }\r\n\r\n  transition: background 0.5s;\r\n`;\r\n\r\nconst Tag = ({ children }) => {\r\n  return <TagStyled>{children}</TagStyled>;\r\n};\r\n\r\nexport default Tag;\r\n","import styled from \"styled-components\";\r\nimport { Text, Title1, Title3 } from \"../../assets/styles/component\";\r\nimport Tag from \"../Intro/tag\";\r\nimport arrow_up_right from \"../../assets/images/arrow-up-right.svg\";\r\n\r\nconst STask = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  gap: 50px;\r\n\r\n  padding: 40px;\r\n  width: calc(50% - 100px);\r\n  text-align: left;\r\n\r\n  border: 2px solid rgba(255, 255, 255, 0.1);\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 28px;\r\n\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.15);\r\n  }\r\n\r\n  & p {\r\n    line-height: 150%;\r\n  }\r\n\r\n  & h3 {\r\n    font-size: clamp(48px, 3vw, 60px);\r\n    line-height: 120%;\r\n    margin-bottom: 24px;\r\n  }\r\n`;\r\n\r\nconst TagsList = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n\r\n  & div {\r\n    position: relative;\r\n    transition: 0.25s ease-in-out;\r\n  }\r\n\r\n  & div:hover {\r\n    padding-right: 45px;\r\n  }\r\n  & div::after {\r\n    opacity: 0%;\r\n    transition: 1.5s;\r\n  }\r\n\r\n  & div:hover::after {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 12px;\r\n    content: \"\";\r\n    width: 22px;\r\n    height: 20px;\r\n    opacity: 100%;\r\n    background-image: url(${arrow_up_right});\r\n  }\r\n`;\r\n\r\nconst Title = styled(Title3)`\r\n  line-height: 130%;\r\n`;\r\n\r\nconst Task = ({ title, desc, tags }) => {\r\n  return (\r\n    <STask>\r\n      <div>\r\n        <Title weight={300}>{title}</Title>\r\n        <Text size={20}>{desc}</Text>\r\n      </div>\r\n      <TagsList>\r\n        {tags.map((tag) => (\r\n          <Tag key={Math.random()}>{tag}</Tag>\r\n        ))}\r\n      </TagsList>\r\n    </STask>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import styled from \"styled-components\";\r\nimport { EngLoc } from \"../../assets/constants/localizations\";\r\nimport { Title2, Title3 } from \"../../assets/styles/component\";\r\nimport Task from \"./taskDesktop\";\r\n\r\nconst STasks = styled.section`\r\n  padding: 150px 0 180px 0;\r\n\r\n  background: radial-gradient(\r\n      105.94% 105.94% at 113.83% -33.36%,\r\n      #ff7cda 0%,\r\n      rgba(255, 124, 218, 0) 100%\r\n    ),\r\n    radial-gradient(\r\n      45.01% 95.17% at 134.48% 0%,\r\n      #7400e8 0%,\r\n      rgba(116, 0, 232, 0) 100%\r\n    ),\r\n    radial-gradient(\r\n      40.65% 44.52% at 90.65% 94.48%,\r\n      #00aee8 0%,\r\n      rgba(0, 174, 232, 0) 100%\r\n    ),\r\n    radial-gradient(\r\n      54.92% 55.79% at 45.91% 41.36%,\r\n      rgba(0, 174, 232, 0.91) 0%,\r\n      rgba(0, 174, 232, 0) 100%\r\n    ),\r\n    radial-gradient(\r\n      56.31% 80.35% at 14.82% 95.16%,\r\n      #7400e8 0%,\r\n      rgba(116, 0, 232, 0) 100%\r\n    ),\r\n    radial-gradient(\r\n      47.68% 95.44% at -2.01% -21.74%,\r\n      #00aee8 0%,\r\n      rgba(0, 174, 232, 0) 100%\r\n    ),\r\n    #000f67;\r\n`;\r\n\r\nconst TasksInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 120px;\r\n  margin: 0 15%;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: calc(100% - 10%);\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tasks = ({ language }) => {\r\n  return (\r\n    <STasks>\r\n      <TasksInner>\r\n        <Title2>\r\n          {language === \"Ru\" ? \"Какие задачи решаем\" : EngLoc.tasks.title}\r\n        </Title2>\r\n        <TaskList>\r\n          <Task\r\n            title={\r\n              language === \"Ru\"\r\n                ? \"Медийная реклама\"\r\n                : EngLoc.tasks.tasks_list[0].title\r\n            }\r\n            desc={\r\n              language === \"Ru\"\r\n                ? \"Вывод бренда на рынок, увеличение узнаваемости и тп\"\r\n                : EngLoc.tasks.tasks_list[0].desc\r\n            }\r\n            tags={[\"TeleJet\", \"RocketVideo\"]}\r\n          />\r\n          <Task\r\n            title={\r\n              language === \"Ru\" ? \"Конверсии\" : EngLoc.tasks.tasks_list[1].title\r\n            }\r\n            desc={\r\n              language === \"Ru\"\r\n                ? \"Достижение целей на сайтах и продажи\"\r\n                : EngLoc.tasks.tasks_list[1].desc\r\n            }\r\n            tags={[\"RocketVideo\"]}\r\n          />\r\n          <Task\r\n            title={\r\n              language === \"Ru\"\r\n                ? \"Раскрутка соц.сетей бизнеса\"\r\n                : EngLoc.tasks.tasks_list[2].title\r\n            }\r\n            desc={\r\n              language === \"Ru\"\r\n                ? \"Увеличение кол-ва подписчиков во всех соц.сетях\"\r\n                : EngLoc.tasks.tasks_list[2].desc\r\n            }\r\n            tags={[\"SocialJet\"]}\r\n          />\r\n          <Task\r\n            title={\r\n              language === \"Ru\" ? \"Аналитика\" : EngLoc.tasks.tasks_list[3].title\r\n            }\r\n            desc={\r\n              language === \"Ru\"\r\n                ? \"Анализ источников тарифа и рекламных кампаний\"\r\n                : EngLoc.tasks.tasks_list[3].desc\r\n            }\r\n            tags={[\"TeleJet\", \"RocketVideo\", \"SocialJet\"]}\r\n          />\r\n        </TaskList>\r\n      </TasksInner>\r\n    </STasks>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const Title1 = styled.h1`\r\n  font-size: 48px;\r\n  font-weight: ${({ weight = 700 }) => weight};\r\n  line-height: 57.6px;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title2 = styled.h2`\r\n  font-weight: 300;\r\n  font-size: 120px;\r\n  line-height: 110%;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title3 = styled.h3`\r\n  font-weight: ${({ weight = 400 }) => weight};\r\n  font-size: 60px;\r\n  line-height: 110%;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title4 = styled.h4`\r\n  font-weight: 300;\r\n  font-size: clamp(28px, 5vw, 32px);\r\n  line-height: 160%;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title5 = styled.h5`\r\n  font-size: 18px;\r\n  font-weight: ${({ weight = 500 }) => weight};\r\n  line-height: 21.6px;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Title6 = styled.h6`\r\n  font-size: 16px;\r\n  font-weight: ${({ weight = 500 }) => weight};\r\n  line-height: 19.2px;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nconst textStandart = css`\r\n  font-size: ${({ size = 18 }) => size}px;\r\n  font-weight: ${({ weight = 300 }) => weight};\r\n  line-height: ${({ size = 18 }) => parseFloat(size) + parseFloat(size) / 2}px;\r\n  color: ${({ color = \"white\" }) => color};\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  ${textStandart}\r\n`;\r\n\r\nexport const A = styled.a`\r\n  ${textStandart}\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n"],"names":["TagStyled","styled","children","STask","TagsList","arrow_up_right","Title","Title3","title","desc","tags","weight","size","map","tag","Math","random","STasks","TasksInner","TaskList","language","EngLoc","Title1","color","Title2","Title4","textStandart","css","parseFloat","Text","A"],"sourceRoot":""}