{"version":3,"file":"static/js/165.1d063d00.chunk.js","mappings":"yOAAaA,GAAS,iBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4B,WACpH,iBAAMC,UAAU,OAAOL,MAAM,KAAKC,OAAO,KAAKK,GAAG,IAAIH,KAAK,QAAQI,YAAY,UAC9E,iBAAMF,UAAU,OAAOG,EAAE,IAAIC,EAAE,KAAKT,MAAM,KAAKC,OAAO,IAAIK,GAAG,IAAIH,KAAK,aACtE,iBAAME,UAAU,OAAOG,EAAE,IAAIC,EAAE,KAAKT,MAAM,KAAKC,OAAO,IAAIK,GAAG,IAAIH,KAAK,aACtE,iBAAME,UAAU,OAAOG,EAAE,IAAIC,EAAE,KAAKT,MAAM,KAAKC,OAAO,IAAIK,GAAG,IAAIH,KAAK,e,mBCMhEO,EAAeC,EAAAA,GAAAA,OAAa,ySAqB5BC,EAAMD,EAAAA,GAAAA,IAAU,0RAalB,oBAAGE,KAAY,YAAR,OAAQ,EACX,iIAOL,IAMGC,EAAYH,EAAAA,GAAAA,IAAU,mgBAyBtB,oBAAGE,KAAY,YAAR,OAAQ,GACX,6DAAiE,IAKrE,oBAAGA,KAAY,YAAR,OAAQ,GACX,8DAAkE,IAItE,oBAAGA,KAAY,YAAR,OAAQ,GAAW,aAAiB,IAI3CE,EAAUJ,EAAAA,GAAAA,IAAU,oMAapBK,EAAOL,EAAAA,GAAAA,IAAU,0DAiDvB,EA5Ce,SAAH,GAAmD,IAA7CM,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAC5C,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAO1B,OACE,UAACb,EAAY,CAACS,QAASA,EAAQ,WAC7B,UAACL,EAAS,CAACD,KAAMS,EAAQ,WACvB,SAACN,EAAI,CAACQ,QAAQ,OAAOC,IAAKC,EAAAA,EAAWC,IAAI,6DACzC,gBAAKC,QAAS,kBAAML,GAAYD,EAAQ,EAAC,SAAEvB,QAE7C,UAACa,EAAG,CAACC,KAAMS,EAAQ,WACjB,SAACP,EAAO,UACLE,EAAQY,KAAI,SAACC,GAAI,OAChB,SAAC,EAAAC,EAAC,CACAC,KAAMF,EAAKE,KACXC,KAAK,KAELC,OAAQJ,EAAKK,OAAS,SAAS,SAE9BL,EAAKM,MAHDC,KAAKC,SAIR,OAGR,SAACC,EAAA,EAAM,CACLC,KAAK,YACLJ,KAAmB,OAAblB,EAAoB,KAAO,MACjCuB,SAAS,KACTC,MAAM,UACNC,SAAS,UACTC,SA9BmB,WAAkB,IAAjBC,EAAI,uDAAG,KACjCC,aAAaC,QAAQ,WAAYF,GACjCzB,EAAUyB,EACZ,KA6BM,SAACN,EAAA,EAAM,CACLC,KAAK,WACLJ,KAAmB,OAAblB,EAAoB,iCAAU8B,EAAAA,EAAAA,QAAAA,aAK9C,C","sources":["Components/Header/burger.jsx","Components/Header/headerMobile.jsx"],"sourcesContent":["export const Burger = <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect className=\"rect\" width=\"40\" height=\"40\" rx=\"9\" fill=\"white\" fillOpacity=\"0.08\"/>\n<rect className=\"row1\" x=\"8\" y=\"12\" width=\"23\" height=\"2\" rx=\"1\" fill=\"#D9D9D9\"/>\n<rect className=\"row2\" x=\"8\" y=\"19\" width=\"23\" height=\"2\" rx=\"1\" fill=\"#D9D9D9\"/>\n<rect className=\"row3\" x=\"8\" y=\"26\" width=\"23\" height=\"2\" rx=\"1\" fill=\"#D9D9D9\"/>\n</svg>\n","import styled from \"styled-components\";\r\n\r\nimport { A } from \"../../assets/styles/component\";\r\nimport Select from \"../../assets/UI/Select\";\r\n\r\nimport logo_desk from \"../../assets/images/logo_desktop.svg\";\r\nimport { Burger } from \"./burger\";\r\nimport { useState } from \"react\";\r\nimport { EngLoc } from \"../../assets/constants/localizations\";\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  width: 100vw;\r\n  height: 75px;\r\n\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n\r\n  transition: 0.25s;\r\n\r\n  &,\r\n  & *:not(div) {\r\n    z-index: 12;\r\n  }\r\n\r\n  background: rgba(71, 8, 204, 0.85);\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  margin-bottom: -18px;\r\n\r\n  max-width: 100vw;\r\n  padding: 15px;\r\n\r\n  background: rgba(71, 8, 204, 0.85);\r\n\r\n  ${({ open = false }) =>\r\n    open\r\n      ? ` opacity: 1;`\r\n      : `opacity: 0;\r\n      user-select: none;\r\n      pointer-events: none;\r\n      height: 0;\r\n      overflow:hidden;\r\n  `}\r\n\r\n  text-align: center;\r\n  transition: 0.5s;\r\n`;\r\n\r\nconst MobileNav = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  & div {\r\n    height: 40px;\r\n    margin-top: 20px;\r\n  }\r\n  & > * {\r\n    margin: 10px 15px;\r\n  }\r\n\r\n  & svg .rect {\r\n    fill-opacity: 0.08;\r\n    transition: 0.5s;\r\n  }\r\n\r\n  & svg:active .rect {\r\n    fill: #ffffff;\r\n    fill-opacity: 0.2;\r\n  }\r\n\r\n  & svg .row1 {\r\n    transition: 0.4s;\r\n    ${({ open = false }) =>\r\n      open && `transform: translateX(15px) translatey(-2px) rotate(45deg);`}\r\n  }\r\n\r\n  & svg .row2 {\r\n    transition: 0.4s;\r\n    ${({ open = false }) =>\r\n      open && `transform: translateX(-9px) translatey(20px) rotate(-45deg);`}\r\n  }\r\n  & svg .row3 {\r\n    transition: 0.25s;\r\n    ${({ open = false }) => open && `opacity: 0;`}\r\n  }\r\n`;\r\n\r\nconst NavTabs = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n\r\n  & > a {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 100px;\r\n  height: 49px;\r\n`;\r\n\r\nconst Header = ({ navItem, language, scrollY, changeLng }) => {\r\n  const [openNav, setOpenNav] = useState(false);\r\n\r\n  const changeLocalization = (lang = \"Ru\") => {\r\n    localStorage.setItem(\"Language\", lang);\r\n    changeLng(lang);\r\n  };\r\n\r\n  return (\r\n    <StyledHeader scrollY={scrollY}>\r\n      <MobileNav open={openNav}>\r\n        <Logo loading=\"lazy\" src={logo_desk} alt=\"За стеклом\" />\r\n        <div onClick={() => setOpenNav(!openNav)}>{Burger}</div>\r\n      </MobileNav>\r\n      <Nav open={openNav}>\r\n        <NavTabs>\r\n          {navItem.map((item) => (\r\n            <A\r\n              href={item.href}\r\n              size=\"18\"\r\n              key={Math.random()}\r\n              target={item.blank && \"_blank\"}\r\n            >\r\n              {item.name}\r\n            </A>\r\n          ))}\r\n        </NavTabs>\r\n        <Select\r\n          type=\"languages\"\r\n          name={language === \"Ru\" ? \"Ru\" : \"Eng\"}\r\n          paddingX=\"12\"\r\n          color=\"#1073D3\"\r\n          bg_color=\"#E7F5FF\"\r\n          onChange={changeLocalization}\r\n        ></Select>\r\n        <Select\r\n          type=\"products\"\r\n          name={language === \"Ru\" ? \"Войти\" : EngLoc.buttons.login}\r\n        ></Select>\r\n      </Nav>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"names":["Burger","width","height","viewBox","fill","xmlns","className","rx","fillOpacity","x","y","StyledHeader","styled","Nav","open","MobileNav","NavTabs","Logo","navItem","language","scrollY","changeLng","useState","openNav","setOpenNav","loading","src","logo_desk","alt","onClick","map","item","A","href","size","target","blank","name","Math","random","Select","type","paddingX","color","bg_color","onChange","lang","localStorage","setItem","EngLoc"],"sourceRoot":""}